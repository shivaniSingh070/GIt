define(['jquery','uiComponent','Magento_Ui/js/modal/alert','Magento_Ui/js/lib/view/utils/dom-observer','mage/translate','PayPal_Braintree/js/validator','braintree','braintreeHostedFields'],function($,Class,alert,domObserver,$t,validator,client,hostedFields){'use strict';return Class.extend({defaults:{$container:null,container:'payment_form_braintree',braintree:null,selectedCardType:null,hostedFieldsInstance:null},initObservable:function(){var self=this;validator.setConfig(this);self.$container=$('#'+self.container);this._super().observe(['selectedCardType']);domObserver.get('#'+self.container,function(){self.initBraintree();});return this;},initBraintree:function(){var self=this;try{$('body').trigger('processStart');client.create({authorization:self.clientToken},function(clientErr,clientInstance){if(clientErr){alert({content:$t('Please configure your Braintree Payments account in order to use the virtual terminal.')});console.error('Error!',clientErr);return self.error(response.clientErr);}
hostedFields.create({client:clientInstance,fields:self.getHostedFields()},function(createErr,hostedFieldsInstance){if(createErr){self.error($t(createErr));console.error('Error!',createErr);return;}
self.hostedFieldsInstance=hostedFieldsInstance;self.$container.on('takePayment',self.submitOrder.bind(self));$('body').trigger('processStop');}.bind(this));}.bind(this));}catch(e){$('body').trigger('processStop');self.error(e.message);console.log(e);}},getHostedFields:function(){return{number:{selector:this.getSelector('cc_number'),placeholder:$t('4111 1111 1111 1111')},expirationMonth:{selector:this.getSelector('cc_exp_month'),placeholder:$t('MM')},expirationYear:{selector:this.getSelector('cc_exp_year'),placeholder:$t('YY')},cvv:{selector:this.getSelector('cc_cid'),placeholder:$t('123')}};},error:function(message){alert({content:message});},setPaymentDetails:function(nonce){var $container=$('#'+this.container);$container.find('[name="payment_method_nonce"]').val(nonce);},submitOrder:function(event){event.preventDefault();this.$container.validate().form();this.$container.trigger('afterValidate.beforeSubmit');$('body').trigger('processStop');if(this.$container.validate().errorList.length){return false;}
$('body').trigger('processStart');this.tokenizeHostedFields();},placeOrder:function(){this.$container.submit();},getCcAvailableTypes:function(){var types=[],$options=$(this.getSelector('cc_type')).find('option');$.map($options,function(option){types.push($(option).val());});return types;},getSelector:function(field){return'#'+this.code+'_'+field;},tokenizeHostedFields:function(){this.hostedFieldsInstance.tokenize({vault:false},function(tokenizeErr,payload){if(tokenizeErr){$('body').trigger('processStop');switch(tokenizeErr.code){case'HOSTED_FIELDS_FIELDS_EMPTY':this.error($t('Please enter a card number, expiration date and CVV'));break;case'HOSTED_FIELDS_FIELDS_INVALID':this.error($t('Please correct the problems with the Credit Card fields.'));console.error('Some fields are invalid:',tokenizeErr.details.invalidFieldKeys);break;case'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':this.error($t('The payment method used, already exists in the user\'s vault. Please use the vault option instead.'));break;case'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':this.error($t('CVV did not pass verification'));break;case'HOSTED_FIELDS_FAILED_TOKENIZATION':this.error($t('There was an issue tokenizing the card. Please check the card is valid.'));console.error('Tokenization failed server side. Is the card valid?');break;case'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':this.error($t('There was an error connecting to Braintree. Please try again.'));break;default:this.error($t('There was an issue processing the payment. Please try again.'));console.error('Braintree error',tokenizeErr);break;}}else{this.setPaymentDetails(payload.nonce);this.placeOrder();}}.bind(this));}});});
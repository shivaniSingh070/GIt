define(['jquery'],function($){'use strict';function buildWindowParams(windowParams){var output='',coma='',paramName,paramValue;for(paramName in windowParams){if(windowParams[paramName]){paramValue=windowParams[paramName];output+=coma+paramName+'='+paramValue;coma=',';}}
return output;}
return function(config){var authWindow,deferred=$.Deferred(),watcherId,stopWatcherId;if(window.adobeIMSAuthWindow){window.adobeIMSAuthWindow.close();}
authWindow=window.adobeIMSAuthWindow=window.open(config.url,'authorization_widnow',buildWindowParams(config.popupWindowParams||{width:500,height:300}));function stopHandle(){clearTimeout(stopWatcherId);clearInterval(watcherId);authWindow.close();}
function startHandle(){var responseData;try{if(authWindow.document.domain!==document.domain||authWindow.document.readyState!=='complete'){return;}
stopWatcherId=setTimeout(function(){stopHandle();deferred.reject(new Error('Time\'s up.'));},config.popupWindowTimeout||60000);responseData=authWindow.document.body.innerHTML.match(config.callbackParsingParams.regexpPattern);if(!responseData){return;}
stopHandle();if(responseData[config.callbackParsingParams.codeIndex]===config.callbackParsingParams.successCode){deferred.resolve({isAuthorized:true,lastAuthSuccessMessage:responseData[config.callbackParsingParams.messageIndex]});}else{deferred.reject(responseData[config.callbackParsingParams.messageIndex]);}}catch(e){if(authWindow.closed){clearTimeout(stopWatcherId);clearInterval(watcherId);if(window.adobeIMSAuthWindow&&window.adobeIMSAuthWindow.closed){deferred.reject(new Error('Authentication window was closed.'));}}}}
watcherId=setInterval(startHandle,1000);return deferred.promise();};});
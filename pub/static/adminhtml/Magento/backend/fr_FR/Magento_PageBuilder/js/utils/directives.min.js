define(["Magento_PageBuilder/js/config"],function(_config){var mimeType="text/magento-directive";function isDirectiveDataUrl(url){return url.indexOf("data:"+mimeType)===0;}
function toDataUrl(directive){return"data:"+mimeType+","+encodeURIComponent(directive);}
function fromDataUrl(url){if(!isDirectiveDataUrl(url)){throw Error(url+" is not a magento directive data url");}
return decodeURIComponent(url.split(mimeType+",")[1]);}
function decodeAllDataUrlsInString(str){return str.replace(new RegExp("url\\s*\\(\\s*(?:&quot;|\'|\")?(data:"+mimeType+",.+?)(?:&quot;|\'|\")?\\s*\\)","g"),function(match,url){return"url(\'"+fromDataUrl(url)+"\')";});}
function getImageUrl(image){var imageUrl=image[0].url;var mediaPath=imageUrl.split(_config.getConfig("media_url"));return"{{media url="+mediaPath[1]+"}}";}
function removeQuotesInMediaDirectives(html){if(!html){return"";}
var mediaDirectiveRegExp=/\{\{\s*media\s+url\s*=\s*(.*?)\s*\}\}/g;var urlRegExp=/\{\{\s*media\s+url\s*=\s*(.*)\s*\}\}/;var mediaDirectiveMatches=html.match(mediaDirectiveRegExp);if(mediaDirectiveMatches){mediaDirectiveMatches.forEach(function(mediaDirective){var urlMatches=mediaDirective.match(urlRegExp);if(urlMatches&&urlMatches[1]!==undefined){var directiveWithOutQuotes="{{media url="+urlMatches[1].replace(/("|&quot;|\s)/g,"")+"}}";html=html.replace(mediaDirective,directiveWithOutQuotes);}});}
return html;}
function convertMediaDirectivesToUrls(html){if(!html){return"";}
var mediaDirectiveRegExp=/\{\{\s*media\s+url\s*=\s*"?[^"\s\}]+"?\s*\}\}/g;var mediaDirectiveMatches=html.match(mediaDirectiveRegExp);if(mediaDirectiveMatches){mediaDirectiveMatches.forEach(function(mediaDirective){var urlRegExp=/\{\{\s*media\s+url\s*=\s*(?:"|&quot;)?(.+)(?=}})\s*\}\}/;var urlMatches=mediaDirective.match(urlRegExp);if(urlMatches&&typeof urlMatches[1]!=="undefined"){html=html.replace(mediaDirective,_config.getConfig("media_url")+urlMatches[1].replace(/"$/,"").replace(/&quot;$/,""));}});}
return html;}
function replaceWithSrc(html){return html.replace(new RegExp("data-tmp-src=\"\{\{","g"),"src=\"{{");}
function replaceWithDataSrc(html){return html.replace(new RegExp("src=\"\{\{","g"),"data-tmp-src=\"{{");}
return Object.assign(decodeAllDataUrlsInString,{toDataUrl:toDataUrl,fromDataUrl:fromDataUrl,getImageUrl:getImageUrl,removeQuotesInMediaDirectives:removeQuotesInMediaDirectives,convertMediaDirectivesToUrls:convertMediaDirectivesToUrls,replaceWithSrc:replaceWithSrc,replaceWithDataSrc:replaceWithDataSrc});});
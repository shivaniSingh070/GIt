define(['jquery','braintree','braintreeDataCollector','braintreeHostedFields','Magento_Checkout/js/model/full-screen-loader','Magento_Ui/js/model/messageList','mage/translate'],function($,client,dataCollector,hostedFields,fullScreenLoader,globalMessageList,$t){'use strict';return{apiClient:null,config:{},checkout:null,deviceData:null,clientInstance:null,hostedFieldsInstance:null,paypalInstance:null,code:'braintree',events:{onClick:null,onCancel:null,onError:null},getApiClient:function(){return this.clientInstance;},setConfig:function(config){this.config=config;},getCode:function(){return this.code;},getClientToken:function(){return window.checkoutConfig.payment[this.getCode()].clientToken;},getEnvironment:function(){return window.checkoutConfig.payment[this.getCode()].environment;},getColor:function(){return window.checkoutConfig.payment[this.getCode()].style.color;},getShape:function(){return window.checkoutConfig.payment[this.getCode()].style.shape;},getLayout:function(){return window.checkoutConfig.payment[this.getCode()].style.layout;},getSize:function(){return window.checkoutConfig.payment[this.getCode()].style.size;},getLabel:function(){return null;},getBranding:function(){return null;},getFundingIcons:function(){return null;},getDisabledFunding:function(){return window.checkoutConfig.payment[this.getCode()].disabledFunding;},showError:function(errorMessage){globalMessageList.addErrorMessage({message:errorMessage});fullScreenLoader.stopLoader(true);},disableButton:function(){fullScreenLoader.stopLoader(true);fullScreenLoader.startLoader();$('[data-button="place"]').attr('disabled','disabled');},enableButton:function(){$('[data-button="place"]').removeAttr('disabled');fullScreenLoader.stopLoader();},getPayPalInstance:function(){if(typeof this.config.paypalInstance!=='undefined'&&this.config.paypalInstance){return this.config.paypalInstance;}
return null;},setPayPalInstance:function(val){this.config.paypalInstance=val;},setup:function(callback){if(!this.getClientToken()){this.showError($t('Sorry, but something went wrong.'));return;}
if(this.clientInstance){if(typeof this.config.onReady==='function'){this.config.onReady(this);}
if(typeof callback==="function"){callback(this.clientInstance);}
return;}
client.create({authorization:this.getClientToken()},function(clientErr,clientInstance){if(clientErr){console.error('Braintree Setup Error',clientErr);return this.showError("Sorry, but something went wrong. Please contact the store owner.");}
var options={client:clientInstance};if(typeof this.config.dataCollector==='object'&&typeof this.config.dataCollector.paypal==='boolean'){options.paypal=true;}else{options.kount=true;}
dataCollector.create(options,function(err,dataCollectorInstance){if(err){return console.log(err);}
this.deviceData=dataCollectorInstance.deviceData;this.config.onDeviceDataRecieved(this.deviceData);}.bind(this));this.clientInstance=clientInstance;if(typeof this.config.onReady==='function'){this.config.onReady(this);}
if(typeof callback==="function"){callback(this.clientInstance);}}.bind(this));},setupHostedFields:function(){var self=this;if(this.hostedFieldsInstance){this.hostedFieldsInstance.teardown(function(){this.hostedFieldsInstance=null;this.setupHostedFields();}.bind(this));return;}
hostedFields.create({client:this.clientInstance,fields:this.config.hostedFields,styles:{"input":{"font-size":"14pt","color":"#3A3A3A"},":focus":{"color":"black"},".valid":{"color":"green"},".invalid":{"color":"red"}}},function(createErr,hostedFieldsInstance){if(createErr){self.showError($t("Braintree hosted fields could not be initialized. Please contact the store owner."));console.error('Braintree hosted fields error',createErr);return;}
this.config.onInstanceReady(hostedFieldsInstance);this.hostedFieldsInstance=hostedFieldsInstance;}.bind(this));},tokenizeHostedFields:function(){this.hostedFieldsInstance.tokenize({},function(tokenizeErr,payload){if(tokenizeErr){switch(tokenizeErr.code){case'HOSTED_FIELDS_FIELDS_EMPTY':console.error('All fields are empty! Please fill out the form.');break;case'HOSTED_FIELDS_FIELDS_INVALID':console.error('Some fields are invalid:',tokenizeErr.details.invalidFieldKeys);break;case'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':console.error('This payment method already exists in your vault.');break;case'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':console.error('CVV did not pass verification');break;case'HOSTED_FIELDS_FAILED_TOKENIZATION':console.error('Tokenization failed server side. Is the card valid?');break;case'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':console.error('Network error occurred when tokenizing.');break;default:console.error('Something bad happened!',tokenizeErr);}}else{this.config.onPaymentMethodReceived(payload);}}.bind(this));}};});